# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened]

jobs:
 
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
  test:
    needs: build
    runs-on: ubuntu-latest
    
    steps: 
      - uses: actions/checkout@v3 
      - name: Run Test with Maven  
        uses: actions/setup-java@v3 
        with:
          java-version: '20' 
          distribution: 'temurin' 
          cache: maven
          run: mvn -B test
      
  sonar: 
      needs: test 
      runs-on: ubuntu-latest
      steps: 
        - uses: actions/checkout@v3 
        - name: Set up JDK 20 
          uses: actions/setup-java@v3 
          with:
            java-version: '20' 
            distribution: 'temurin' 
            cache: maven
        - name: Cache SonarCloud packages 
          uses: actions/cache@v3 
          with: 
            path: ~/.sonar/cache 
            key: ${{ runner.os }}-sonar 
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages 
          uses: actions/cache@v3 
          with: 
            path: ~/.m2 
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }} 
            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze on SonarCloud ATA/S-EPAT/CIWorkshop/v3.7 32NICF â€“ Essential Practices for Agile Teams 
          run: mvn -e -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=kokyawlin_cicd-demo
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  snyk:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
         sarif_file: snyk.sarif
